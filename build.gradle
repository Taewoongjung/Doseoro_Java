plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
}

group = 'com.myproject'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.apache.tomcat.embed:tomcat-embed-jasper"
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'mysql:mysql-connector-java'
	implementation 'org.projectlombok:lombok:1.18.24'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.5.2'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.h2database:h2'

	// mybatis
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'

	// AOP 추가
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// lombok 라이브러리 추가 시작
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.2'
	// lombok 라이브러리 추가 끝

	implementation 'org.springframework.boot:spring-boot-starter-security:2.6.7'
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
	// jsp
	implementation 'javax.servlet:jstl'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// HotSwap = hot reloader
	compileOnly("org.springframework.boot:spring-boot-devtools")
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'com.google.code.gson:gson:2.9.1'
}

tasks.named('test') {
	useJUnitPlatform()
}
